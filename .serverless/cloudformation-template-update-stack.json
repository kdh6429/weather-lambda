{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "VilageFcstSetBatchLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/weather-accuracy-lamdba-dev-vilageFcstSetBatch"
      }
    },
    "UltraSrtNcstBatchLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/weather-accuracy-lamdba-dev-ultraSrtNcstBatch"
      }
    },
    "UltraSrtFcstBatchLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/weather-accuracy-lamdba-dev-ultraSrtFcstBatch"
      }
    },
    "MidTaBatchLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/weather-accuracy-lamdba-dev-midTaBatch"
      }
    },
    "MidLandFcstBatchLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/weather-accuracy-lamdba-dev-midLandFcstBatch"
      }
    },
    "Gen1HourStatsLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/weather-accuracy-lamdba-dev-gen1HourStats"
      }
    },
    "Gen3HourStatsLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/weather-accuracy-lamdba-dev-gen3HourStats"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "weather-accuracy-lamdba",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/weather-accuracy-lamdba-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/weather-accuracy-lamdba-dev*:*:*"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "weather-accuracy-lamdba",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "VilageFcstSetBatchLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/weather-accuracy-lamdba/dev/1634127243033-2021-10-13T12:14:03.033Z/weather-accuracy-lamdba.zip"
        },
        "Handler": "shortWeather.vilageFcstBatch",
        "Runtime": "nodejs12.x",
        "FunctionName": "weather-accuracy-lamdba-dev-vilageFcstSetBatch",
        "MemorySize": 1024,
        "Timeout": 600,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "VilageFcstSetBatchLogGroup"
      ]
    },
    "UltraSrtNcstBatchLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/weather-accuracy-lamdba/dev/1634127243033-2021-10-13T12:14:03.033Z/weather-accuracy-lamdba.zip"
        },
        "Handler": "shortWeather.ultraSrtNcstBatch",
        "Runtime": "nodejs12.x",
        "FunctionName": "weather-accuracy-lamdba-dev-ultraSrtNcstBatch",
        "MemorySize": 1024,
        "Timeout": 240,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "UltraSrtNcstBatchLogGroup"
      ]
    },
    "UltraSrtFcstBatchLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/weather-accuracy-lamdba/dev/1634127243033-2021-10-13T12:14:03.033Z/weather-accuracy-lamdba.zip"
        },
        "Handler": "shortWeather.ultraSrtFcstBatch",
        "Runtime": "nodejs12.x",
        "FunctionName": "weather-accuracy-lamdba-dev-ultraSrtFcstBatch",
        "MemorySize": 1024,
        "Timeout": 240,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "UltraSrtFcstBatchLogGroup"
      ]
    },
    "MidTaBatchLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/weather-accuracy-lamdba/dev/1634127243033-2021-10-13T12:14:03.033Z/weather-accuracy-lamdba.zip"
        },
        "Handler": "shortWeather.midTaBatch",
        "Runtime": "nodejs12.x",
        "FunctionName": "weather-accuracy-lamdba-dev-midTaBatch",
        "MemorySize": 1024,
        "Timeout": 240,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "MidTaBatchLogGroup"
      ]
    },
    "MidLandFcstBatchLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/weather-accuracy-lamdba/dev/1634127243033-2021-10-13T12:14:03.033Z/weather-accuracy-lamdba.zip"
        },
        "Handler": "shortWeather.midLandFcstBatch",
        "Runtime": "nodejs12.x",
        "FunctionName": "weather-accuracy-lamdba-dev-midLandFcstBatch",
        "MemorySize": 1024,
        "Timeout": 240,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "MidLandFcstBatchLogGroup"
      ]
    },
    "Gen1HourStatsLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/weather-accuracy-lamdba/dev/1634127243033-2021-10-13T12:14:03.033Z/weather-accuracy-lamdba.zip"
        },
        "Handler": "weatherStats.gen1HourStats",
        "Runtime": "nodejs12.x",
        "FunctionName": "weather-accuracy-lamdba-dev-gen1HourStats",
        "MemorySize": 1024,
        "Timeout": 600,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "Gen1HourStatsLogGroup"
      ]
    },
    "Gen3HourStatsLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/weather-accuracy-lamdba/dev/1634127243033-2021-10-13T12:14:03.033Z/weather-accuracy-lamdba.zip"
        },
        "Handler": "weatherStats.gen3HourStats",
        "Runtime": "nodejs12.x",
        "FunctionName": "weather-accuracy-lamdba-dev-gen3HourStats",
        "MemorySize": 1024,
        "Timeout": 600,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "Gen3HourStatsLogGroup"
      ]
    },
    "VilageFcstSetBatchLambdaVersionh2moEF7GpqBEwwAJLXAuZCRFGdoroPm2HfyBk21A0": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "VilageFcstSetBatchLambdaFunction"
        },
        "CodeSha256": "gmng2aIHvwx8OiKwCLO+oZx4VRb/91oERj4xuGe1Mts="
      }
    },
    "UltraSrtNcstBatchLambdaVersionsDSSj9HooEdxG4v9BUOcTFDN347mv6QyraIDqSpw": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "UltraSrtNcstBatchLambdaFunction"
        },
        "CodeSha256": "gmng2aIHvwx8OiKwCLO+oZx4VRb/91oERj4xuGe1Mts="
      }
    },
    "MidTaBatchLambdaVersiony5nIOvhWvJw5Zhc6S6JywZlwkZxuhrAqpXSSJgJNVw": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "MidTaBatchLambdaFunction"
        },
        "CodeSha256": "gmng2aIHvwx8OiKwCLO+oZx4VRb/91oERj4xuGe1Mts="
      }
    },
    "UltraSrtFcstBatchLambdaVersion2AARf3CXmFpFXuvjVFQxdu4blMG1iN0X7C2El86DfJ8": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "UltraSrtFcstBatchLambdaFunction"
        },
        "CodeSha256": "gmng2aIHvwx8OiKwCLO+oZx4VRb/91oERj4xuGe1Mts="
      }
    },
    "MidLandFcstBatchLambdaVersionG3fi1IJvVN6N8CwnpoXhtRK9vMJYb2WuO6rION1nX4": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "MidLandFcstBatchLambdaFunction"
        },
        "CodeSha256": "gmng2aIHvwx8OiKwCLO+oZx4VRb/91oERj4xuGe1Mts="
      }
    },
    "Gen1HourStatsLambdaVersionOd5tVEdJ67QkMNPHU40IZqVifOAujGHY43hDa7hE2Q": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "Gen1HourStatsLambdaFunction"
        },
        "CodeSha256": "gmng2aIHvwx8OiKwCLO+oZx4VRb/91oERj4xuGe1Mts="
      }
    },
    "Gen3HourStatsLambdaVersionzh6rSAJ0kfxUQf8YAGa6cyXqgfA7cnu2gTlVLNH6mE": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "Gen3HourStatsLambdaFunction"
        },
        "CodeSha256": "gmng2aIHvwx8OiKwCLO+oZx4VRb/91oERj4xuGe1Mts="
      }
    },
    "VilageFcstSetBatchEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(17 2,5,8,11,14,17,20,23 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "VilageFcstSetBatchLambdaFunction",
                "Arn"
              ]
            },
            "Id": "vilageFcstSetBatchSchedule"
          }
        ]
      }
    },
    "VilageFcstSetBatchLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "VilageFcstSetBatchLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "VilageFcstSetBatchEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "UltraSrtNcstBatchEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(47 * * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "UltraSrtNcstBatchLambdaFunction",
                "Arn"
              ]
            },
            "Id": "ultraSrtNcstBatchSchedule"
          }
        ]
      }
    },
    "UltraSrtNcstBatchLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "UltraSrtNcstBatchLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "UltraSrtNcstBatchEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "UltraSrtFcstBatchEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(49 * * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "UltraSrtFcstBatchLambdaFunction",
                "Arn"
              ]
            },
            "Id": "ultraSrtFcstBatchSchedule"
          }
        ]
      }
    },
    "UltraSrtFcstBatchLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "UltraSrtFcstBatchLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "UltraSrtFcstBatchEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "MidTaBatchEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(10 9,21 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "MidTaBatchLambdaFunction",
                "Arn"
              ]
            },
            "Id": "midTaBatchSchedule"
          }
        ]
      }
    },
    "MidTaBatchLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "MidTaBatchLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "MidTaBatchEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "MidLandFcstBatchEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(10 9,21 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "MidLandFcstBatchLambdaFunction",
                "Arn"
              ]
            },
            "Id": "midLandFcstBatchSchedule"
          }
        ]
      }
    },
    "MidLandFcstBatchLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "MidLandFcstBatchLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "MidLandFcstBatchEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "Gen1HourStatsEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(55 * * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "Gen1HourStatsLambdaFunction",
                "Arn"
              ]
            },
            "Id": "gen1HourStatsSchedule"
          }
        ]
      }
    },
    "Gen1HourStatsLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "Gen1HourStatsLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "Gen1HourStatsEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "Gen3HourStatsEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(55 0,3,6,9,12,15,18,21 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "Gen3HourStatsLambdaFunction",
                "Arn"
              ]
            },
            "Id": "gen3HourStatsSchedule"
          }
        ]
      }
    },
    "Gen3HourStatsLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "Gen3HourStatsLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "Gen3HourStatsEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-weather-accuracy-lamdba-dev-ServerlessDeploymentBucketName"
      }
    },
    "VilageFcstSetBatchLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "VilageFcstSetBatchLambdaVersionh2moEF7GpqBEwwAJLXAuZCRFGdoroPm2HfyBk21A0"
      },
      "Export": {
        "Name": "sls-weather-accuracy-lamdba-dev-VilageFcstSetBatchLambdaFunctionQualifiedArn"
      }
    },
    "UltraSrtNcstBatchLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "UltraSrtNcstBatchLambdaVersionsDSSj9HooEdxG4v9BUOcTFDN347mv6QyraIDqSpw"
      },
      "Export": {
        "Name": "sls-weather-accuracy-lamdba-dev-UltraSrtNcstBatchLambdaFunctionQualifiedArn"
      }
    },
    "MidTaBatchLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "MidTaBatchLambdaVersiony5nIOvhWvJw5Zhc6S6JywZlwkZxuhrAqpXSSJgJNVw"
      },
      "Export": {
        "Name": "sls-weather-accuracy-lamdba-dev-MidTaBatchLambdaFunctionQualifiedArn"
      }
    },
    "UltraSrtFcstBatchLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "UltraSrtFcstBatchLambdaVersion2AARf3CXmFpFXuvjVFQxdu4blMG1iN0X7C2El86DfJ8"
      },
      "Export": {
        "Name": "sls-weather-accuracy-lamdba-dev-UltraSrtFcstBatchLambdaFunctionQualifiedArn"
      }
    },
    "MidLandFcstBatchLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "MidLandFcstBatchLambdaVersionG3fi1IJvVN6N8CwnpoXhtRK9vMJYb2WuO6rION1nX4"
      },
      "Export": {
        "Name": "sls-weather-accuracy-lamdba-dev-MidLandFcstBatchLambdaFunctionQualifiedArn"
      }
    },
    "Gen1HourStatsLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "Gen1HourStatsLambdaVersionOd5tVEdJ67QkMNPHU40IZqVifOAujGHY43hDa7hE2Q"
      },
      "Export": {
        "Name": "sls-weather-accuracy-lamdba-dev-Gen1HourStatsLambdaFunctionQualifiedArn"
      }
    },
    "Gen3HourStatsLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "Gen3HourStatsLambdaVersionzh6rSAJ0kfxUQf8YAGa6cyXqgfA7cnu2gTlVLNH6mE"
      },
      "Export": {
        "Name": "sls-weather-accuracy-lamdba-dev-Gen3HourStatsLambdaFunctionQualifiedArn"
      }
    }
  }
}