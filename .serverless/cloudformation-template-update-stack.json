{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "VilageFcstSetBatchLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/weather-accuracy-lamdba-dev-vilageFcstSetBatch"
      }
    },
    "UltraSrtNcstBatchLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/weather-accuracy-lamdba-dev-ultraSrtNcstBatch"
      }
    },
    "UltraSrtFcstBatchLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/weather-accuracy-lamdba-dev-ultraSrtFcstBatch"
      }
    },
    "MidTaBatchLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/weather-accuracy-lamdba-dev-midTaBatch"
      }
    },
    "MidLandFcstBatchLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/weather-accuracy-lamdba-dev-midLandFcstBatch"
      }
    },
    "Gen1HourStatsLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/weather-accuracy-lamdba-dev-gen1HourStats"
      }
    },
    "Gen3HourStatsLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/weather-accuracy-lamdba-dev-gen3HourStats"
      }
    },
    "Gen24HourStatsLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/weather-accuracy-lamdba-dev-gen24HourStats"
      }
    },
    "SetOutputLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/weather-accuracy-lamdba-dev-setOutput"
      }
    },
    "SetOutputUnderscore3hoursLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/weather-accuracy-lamdba-dev-setOutput_3hours"
      }
    },
    "SetOutputUnderscore24hoursLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/weather-accuracy-lamdba-dev-setOutput_24hours"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "weather-accuracy-lamdba",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/weather-accuracy-lamdba-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/weather-accuracy-lamdba-dev*:*:*"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "weather-accuracy-lamdba",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "VilageFcstSetBatchLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/weather-accuracy-lamdba/dev/1636699433097-2021-11-12T06:43:53.097Z/weather-accuracy-lamdba.zip"
        },
        "Handler": "shortWeather.vilageFcstBatch",
        "Runtime": "nodejs12.x",
        "FunctionName": "weather-accuracy-lamdba-dev-vilageFcstSetBatch",
        "MemorySize": 1024,
        "Timeout": 600,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "VilageFcstSetBatchLogGroup"
      ]
    },
    "UltraSrtNcstBatchLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/weather-accuracy-lamdba/dev/1636699433097-2021-11-12T06:43:53.097Z/weather-accuracy-lamdba.zip"
        },
        "Handler": "shortWeather.ultraSrtNcstBatch",
        "Runtime": "nodejs12.x",
        "FunctionName": "weather-accuracy-lamdba-dev-ultraSrtNcstBatch",
        "MemorySize": 1024,
        "Timeout": 240,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "UltraSrtNcstBatchLogGroup"
      ]
    },
    "UltraSrtFcstBatchLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/weather-accuracy-lamdba/dev/1636699433097-2021-11-12T06:43:53.097Z/weather-accuracy-lamdba.zip"
        },
        "Handler": "shortWeather.ultraSrtFcstBatch",
        "Runtime": "nodejs12.x",
        "FunctionName": "weather-accuracy-lamdba-dev-ultraSrtFcstBatch",
        "MemorySize": 1024,
        "Timeout": 240,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "UltraSrtFcstBatchLogGroup"
      ]
    },
    "MidTaBatchLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/weather-accuracy-lamdba/dev/1636699433097-2021-11-12T06:43:53.097Z/weather-accuracy-lamdba.zip"
        },
        "Handler": "shortWeather.midTaBatch",
        "Runtime": "nodejs12.x",
        "FunctionName": "weather-accuracy-lamdba-dev-midTaBatch",
        "MemorySize": 1024,
        "Timeout": 240,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "MidTaBatchLogGroup"
      ]
    },
    "MidLandFcstBatchLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/weather-accuracy-lamdba/dev/1636699433097-2021-11-12T06:43:53.097Z/weather-accuracy-lamdba.zip"
        },
        "Handler": "shortWeather.midLandFcstBatch",
        "Runtime": "nodejs12.x",
        "FunctionName": "weather-accuracy-lamdba-dev-midLandFcstBatch",
        "MemorySize": 1024,
        "Timeout": 240,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "MidLandFcstBatchLogGroup"
      ]
    },
    "Gen1HourStatsLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/weather-accuracy-lamdba/dev/1636699433097-2021-11-12T06:43:53.097Z/weather-accuracy-lamdba.zip"
        },
        "Handler": "weatherStats.gen1HourStats",
        "Runtime": "nodejs12.x",
        "FunctionName": "weather-accuracy-lamdba-dev-gen1HourStats",
        "MemorySize": 1024,
        "Timeout": 600,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "Gen1HourStatsLogGroup"
      ]
    },
    "Gen3HourStatsLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/weather-accuracy-lamdba/dev/1636699433097-2021-11-12T06:43:53.097Z/weather-accuracy-lamdba.zip"
        },
        "Handler": "weatherStats.gen3HourStats",
        "Runtime": "nodejs12.x",
        "FunctionName": "weather-accuracy-lamdba-dev-gen3HourStats",
        "MemorySize": 1024,
        "Timeout": 600,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "Gen3HourStatsLogGroup"
      ]
    },
    "Gen24HourStatsLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/weather-accuracy-lamdba/dev/1636699433097-2021-11-12T06:43:53.097Z/weather-accuracy-lamdba.zip"
        },
        "Handler": "weatherStats.gen24HourStats",
        "Runtime": "nodejs12.x",
        "FunctionName": "weather-accuracy-lamdba-dev-gen24HourStats",
        "MemorySize": 1024,
        "Timeout": 600,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "Gen24HourStatsLogGroup"
      ]
    },
    "SetOutputLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/weather-accuracy-lamdba/dev/1636699433097-2021-11-12T06:43:53.097Z/weather-accuracy-lamdba.zip"
        },
        "Handler": "weatherStats_output.output",
        "Runtime": "nodejs12.x",
        "FunctionName": "weather-accuracy-lamdba-dev-setOutput",
        "MemorySize": 1024,
        "Timeout": 120,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "SetOutputLogGroup"
      ]
    },
    "SetOutputUnderscore3hoursLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/weather-accuracy-lamdba/dev/1636699433097-2021-11-12T06:43:53.097Z/weather-accuracy-lamdba.zip"
        },
        "Handler": "weatherStats_output_3hours.output",
        "Runtime": "nodejs12.x",
        "FunctionName": "weather-accuracy-lamdba-dev-setOutput_3hours",
        "MemorySize": 1024,
        "Timeout": 120,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "SetOutputUnderscore3hoursLogGroup"
      ]
    },
    "SetOutputUnderscore24hoursLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/weather-accuracy-lamdba/dev/1636699433097-2021-11-12T06:43:53.097Z/weather-accuracy-lamdba.zip"
        },
        "Handler": "weatherStats_output_24hours.output",
        "Runtime": "nodejs12.x",
        "FunctionName": "weather-accuracy-lamdba-dev-setOutput_24hours",
        "MemorySize": 1024,
        "Timeout": 120,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "SetOutputUnderscore24hoursLogGroup"
      ]
    },
    "VilageFcstSetBatchLambdaVersioni9R30GTIswvFOr5W0YIOT26lN6Bjo3ttPkDsEWosNXw": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "VilageFcstSetBatchLambdaFunction"
        },
        "CodeSha256": "be040+gA14V24qMkRXo6OvH8PIclhcTq/DXw6uL+Aaw="
      }
    },
    "UltraSrtFcstBatchLambdaVersionYmLxZWGYfEGIgGouyMXNl47TATNvv7xX7IkAjVImfdE": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "UltraSrtFcstBatchLambdaFunction"
        },
        "CodeSha256": "be040+gA14V24qMkRXo6OvH8PIclhcTq/DXw6uL+Aaw="
      }
    },
    "UltraSrtNcstBatchLambdaVersionIuneCZyT8cj4bh9ukQL1AdKxOMxgilFO2UDtC5ruI": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "UltraSrtNcstBatchLambdaFunction"
        },
        "CodeSha256": "be040+gA14V24qMkRXo6OvH8PIclhcTq/DXw6uL+Aaw="
      }
    },
    "MidLandFcstBatchLambdaVersionXhbqrcF9InRVim5tduSMokdj2YQftBNDXcm1s6idd8": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "MidLandFcstBatchLambdaFunction"
        },
        "CodeSha256": "be040+gA14V24qMkRXo6OvH8PIclhcTq/DXw6uL+Aaw="
      }
    },
    "MidTaBatchLambdaVersionU5jBkn2T7GclQ1iC0k7PzavlijAbZQL0onRs4yCTo": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "MidTaBatchLambdaFunction"
        },
        "CodeSha256": "be040+gA14V24qMkRXo6OvH8PIclhcTq/DXw6uL+Aaw="
      }
    },
    "Gen1HourStatsLambdaVersionvHG5YKkXlc9dL7vwS7nqy1gTqREowcuixDdPPDkrk": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "Gen1HourStatsLambdaFunction"
        },
        "CodeSha256": "be040+gA14V24qMkRXo6OvH8PIclhcTq/DXw6uL+Aaw="
      }
    },
    "Gen3HourStatsLambdaVersionZvF8g06gbAKqa9ohHCUMFHbWdOxT3gn3SzolCQs2Ns": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "Gen3HourStatsLambdaFunction"
        },
        "CodeSha256": "be040+gA14V24qMkRXo6OvH8PIclhcTq/DXw6uL+Aaw="
      }
    },
    "Gen24HourStatsLambdaVersionHhsNioRo2jGgeHMsV2MCbozCUeZkrJUZrGSV9g9U": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "Gen24HourStatsLambdaFunction"
        },
        "CodeSha256": "be040+gA14V24qMkRXo6OvH8PIclhcTq/DXw6uL+Aaw="
      }
    },
    "SetOutputLambdaVersionAASF1tMDkyCnn6USEneWCtcwW5g3wDY6V4j5sI1pQ9k": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "SetOutputLambdaFunction"
        },
        "CodeSha256": "be040+gA14V24qMkRXo6OvH8PIclhcTq/DXw6uL+Aaw="
      }
    },
    "SetOutputUnderscore3hoursLambdaVersionSnSnDkTE30nSWfT29BzIBmAhTZD8HW96uz7UBDBQ": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "SetOutputUnderscore3hoursLambdaFunction"
        },
        "CodeSha256": "be040+gA14V24qMkRXo6OvH8PIclhcTq/DXw6uL+Aaw="
      }
    },
    "SetOutputUnderscore24hoursLambdaVersionL67j8TwZ9jqJOAqCeIrCYT7E0b23ABmbdVfmGO0TQ": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "SetOutputUnderscore24hoursLambdaFunction"
        },
        "CodeSha256": "be040+gA14V24qMkRXo6OvH8PIclhcTq/DXw6uL+Aaw="
      }
    },
    "VilageFcstSetBatchEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(17 2,5,8,11,14,17,20,23 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "VilageFcstSetBatchLambdaFunction",
                "Arn"
              ]
            },
            "Id": "vilageFcstSetBatchSchedule"
          }
        ]
      }
    },
    "VilageFcstSetBatchLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "VilageFcstSetBatchLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "VilageFcstSetBatchEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "UltraSrtNcstBatchEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(45 * * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "UltraSrtNcstBatchLambdaFunction",
                "Arn"
              ]
            },
            "Id": "ultraSrtNcstBatchSchedule"
          }
        ]
      }
    },
    "UltraSrtNcstBatchLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "UltraSrtNcstBatchLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "UltraSrtNcstBatchEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "UltraSrtFcstBatchEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(47 * * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "UltraSrtFcstBatchLambdaFunction",
                "Arn"
              ]
            },
            "Id": "ultraSrtFcstBatchSchedule"
          }
        ]
      }
    },
    "UltraSrtFcstBatchLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "UltraSrtFcstBatchLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "UltraSrtFcstBatchEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "MidTaBatchEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(10 9,21 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "MidTaBatchLambdaFunction",
                "Arn"
              ]
            },
            "Id": "midTaBatchSchedule"
          }
        ]
      }
    },
    "MidTaBatchLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "MidTaBatchLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "MidTaBatchEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "MidLandFcstBatchEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(10 9,21 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "MidLandFcstBatchLambdaFunction",
                "Arn"
              ]
            },
            "Id": "midLandFcstBatchSchedule"
          }
        ]
      }
    },
    "MidLandFcstBatchLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "MidLandFcstBatchLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "MidLandFcstBatchEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "Gen1HourStatsEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(55 * * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "Gen1HourStatsLambdaFunction",
                "Arn"
              ]
            },
            "Id": "gen1HourStatsSchedule"
          }
        ]
      }
    },
    "Gen1HourStatsLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "Gen1HourStatsLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "Gen1HourStatsEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "Gen3HourStatsEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(1 1,4,7,10,11,16,19,22 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "Gen3HourStatsLambdaFunction",
                "Arn"
              ]
            },
            "Id": "gen3HourStatsSchedule"
          }
        ]
      }
    },
    "Gen3HourStatsLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "Gen3HourStatsLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "Gen3HourStatsEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "Gen24HourStatsEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(5 15 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "Gen24HourStatsLambdaFunction",
                "Arn"
              ]
            },
            "Id": "gen24HourStatsSchedule"
          }
        ]
      }
    },
    "Gen24HourStatsLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "Gen24HourStatsLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "Gen24HourStatsEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "SetOutputEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(3 * * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "SetOutputLambdaFunction",
                "Arn"
              ]
            },
            "Id": "setOutputSchedule"
          }
        ]
      }
    },
    "SetOutputLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "SetOutputLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "SetOutputEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "SetOutputUnderscore3hoursEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(5 1,4,7,10,11,16,19,22 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "SetOutputUnderscore3hoursLambdaFunction",
                "Arn"
              ]
            },
            "Id": "setOutput_3hoursSchedule"
          }
        ]
      }
    },
    "SetOutputUnderscore3hoursLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "SetOutputUnderscore3hoursLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "SetOutputUnderscore3hoursEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "SetOutputUnderscore24hoursEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(7 15 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "SetOutputUnderscore24hoursLambdaFunction",
                "Arn"
              ]
            },
            "Id": "setOutput_24hoursSchedule"
          }
        ]
      }
    },
    "SetOutputUnderscore24hoursLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "SetOutputUnderscore24hoursLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "SetOutputUnderscore24hoursEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-weather-accuracy-lamdba-dev-ServerlessDeploymentBucketName"
      }
    },
    "VilageFcstSetBatchLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "VilageFcstSetBatchLambdaVersioni9R30GTIswvFOr5W0YIOT26lN6Bjo3ttPkDsEWosNXw"
      },
      "Export": {
        "Name": "sls-weather-accuracy-lamdba-dev-VilageFcstSetBatchLambdaFunctionQualifiedArn"
      }
    },
    "UltraSrtFcstBatchLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "UltraSrtFcstBatchLambdaVersionYmLxZWGYfEGIgGouyMXNl47TATNvv7xX7IkAjVImfdE"
      },
      "Export": {
        "Name": "sls-weather-accuracy-lamdba-dev-UltraSrtFcstBatchLambdaFunctionQualifiedArn"
      }
    },
    "UltraSrtNcstBatchLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "UltraSrtNcstBatchLambdaVersionIuneCZyT8cj4bh9ukQL1AdKxOMxgilFO2UDtC5ruI"
      },
      "Export": {
        "Name": "sls-weather-accuracy-lamdba-dev-UltraSrtNcstBatchLambdaFunctionQualifiedArn"
      }
    },
    "MidLandFcstBatchLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "MidLandFcstBatchLambdaVersionXhbqrcF9InRVim5tduSMokdj2YQftBNDXcm1s6idd8"
      },
      "Export": {
        "Name": "sls-weather-accuracy-lamdba-dev-MidLandFcstBatchLambdaFunctionQualifiedArn"
      }
    },
    "MidTaBatchLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "MidTaBatchLambdaVersionU5jBkn2T7GclQ1iC0k7PzavlijAbZQL0onRs4yCTo"
      },
      "Export": {
        "Name": "sls-weather-accuracy-lamdba-dev-MidTaBatchLambdaFunctionQualifiedArn"
      }
    },
    "Gen1HourStatsLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "Gen1HourStatsLambdaVersionvHG5YKkXlc9dL7vwS7nqy1gTqREowcuixDdPPDkrk"
      },
      "Export": {
        "Name": "sls-weather-accuracy-lamdba-dev-Gen1HourStatsLambdaFunctionQualifiedArn"
      }
    },
    "Gen3HourStatsLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "Gen3HourStatsLambdaVersionZvF8g06gbAKqa9ohHCUMFHbWdOxT3gn3SzolCQs2Ns"
      },
      "Export": {
        "Name": "sls-weather-accuracy-lamdba-dev-Gen3HourStatsLambdaFunctionQualifiedArn"
      }
    },
    "Gen24HourStatsLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "Gen24HourStatsLambdaVersionHhsNioRo2jGgeHMsV2MCbozCUeZkrJUZrGSV9g9U"
      },
      "Export": {
        "Name": "sls-weather-accuracy-lamdba-dev-Gen24HourStatsLambdaFunctionQualifiedArn"
      }
    },
    "SetOutputLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "SetOutputLambdaVersionAASF1tMDkyCnn6USEneWCtcwW5g3wDY6V4j5sI1pQ9k"
      },
      "Export": {
        "Name": "sls-weather-accuracy-lamdba-dev-SetOutputLambdaFunctionQualifiedArn"
      }
    },
    "SetOutputUnderscore3hoursLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "SetOutputUnderscore3hoursLambdaVersionSnSnDkTE30nSWfT29BzIBmAhTZD8HW96uz7UBDBQ"
      },
      "Export": {
        "Name": "sls-weather-accuracy-lamdba-dev-SetOutputUnderscore3hoursLambdaFunctionQualifiedArn"
      }
    },
    "SetOutputUnderscore24hoursLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "SetOutputUnderscore24hoursLambdaVersionL67j8TwZ9jqJOAqCeIrCYT7E0b23ABmbdVfmGO0TQ"
      },
      "Export": {
        "Name": "sls-weather-accuracy-lamdba-dev-SetOutputUnderscore24hoursLambdaFunctionQualifiedArn"
      }
    }
  }
}